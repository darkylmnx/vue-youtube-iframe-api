{"version":3,"sources":["config.js","utils.js","components\\Player.js","main.js"],"names":["SIZES","MIN_SIZES","IframeAPIReady","Promise","resolve","reject","onYouTubeIframeAPIReady","getIdFromUrl","swapObject","id_regex","url","match","obj","new_obj","k","STATES","String","Number","WIDTH","HEIGHT","Object","new_ytid","loadById","new_yturl","loadByUrl","event","shouldLoadByUrl","yturl","$emit","data","toLowerCase","id","method","playerVars","autoplay","player","loadVideoById","length","then","assign","window","YT","PlayerState","Player","$el","width","height","ytid","onReady","onError","onApiChange","onStateChange","onPlaybackRateChange","onPlaybackQualityChange","destroy","h","plugin","Vue","loadComponent","log","tag","document","createElement","src","first_script","getElementsByTagName","parentNode","insertBefore","component","use"],"mappings":"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","file":"main.map","sourceRoot":"..\\src","sourcesContent":["export const SIZES = {\r\n  WIDTH: 640,\r\n  HEIGHT: 360\r\n}\r\n\r\nexport const MIN_SIZES = {\r\n  WIDTH: 200,\r\n  HEIGHT: 200\r\n}\r\n\r\n// export the ready state promise\r\nexport const IframeAPIReady = new Promise((resolve, reject) => {\r\n  window.onYouTubeIframeAPIReady = () => resolve()\r\n})\r\n","// export get id from url\r\nconst id_regex = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\r\n\r\nexport function getIdFromUrl(url) {\r\n  const match = url.match(id_regex)\r\n\r\n  if (!match || !match[1]) {\r\n    return false\r\n  }\r\n\r\n  return match[1]\r\n}\r\n\r\n// export reverse fonction\r\nexport function swapObject(obj){\r\n  const new_obj = {}\r\n\r\n  for(var k in obj) {\r\n    new_obj[obj[k]] = k;\r\n  }\r\n\r\n  return new_obj\r\n}\r\n","import { SIZES, IframeAPIReady } from '../config'\r\nimport { getIdFromUrl, swapObject } from '../utils'\r\n\r\nconst STATES = {}\r\n\r\nexport default {\r\n  props: {\r\n    ytid: {\r\n      type: String\r\n    },\r\n    yturl: {\r\n      type: String\r\n    },\r\n    width: {\r\n      type: [String, Number],\r\n      default () {\r\n        return SIZES.WIDTH\r\n      }\r\n    },\r\n    height: {\r\n      type: [String, Number],\r\n      default () {\r\n        return SIZES.HEIGHT\r\n      }\r\n    },\r\n    playerVars: {\r\n      type: Object,\r\n      default: {}\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    ytid (new_ytid) {\r\n      this.loadById(new_ytid)\r\n    },\r\n    yturl (new_yturl) {\r\n      this.loadByUrl(new_yturl)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    onReady (event) {\r\n      if (this.shouldLoadByUrl) {\r\n        this.loadByUrl(this.yturl)\r\n        this.shouldLoadByUrl = false\r\n      }\r\n\r\n      // console.log('ready', event)\r\n      this.$emit('ready', event)\r\n    },\r\n    onError (event) {\r\n      // console.log('error', event)\r\n      this.$emit('error', event)\r\n    },\r\n    onApiChange (event) {\r\n      // console.log('api-change', event)\r\n      this.$emit('api-change', event)\r\n    },\r\n    onStateChange (event) {\r\n      // console.log('state-change', event)\r\n      this.$emit('state-change', event)\r\n      this.$emit(STATES[event.data].toLowerCase(), event)\r\n    },\r\n    onPlaybackRateChange (event) {\r\n      // console.log('playback-rate-change', event)\r\n      this.$emit('playback-rate-change', event)\r\n    },\r\n    onPlaybackQualityChange (event) {\r\n      // console.log('playback-quality-change', event)\r\n      this.$emit('playback-quality-change', event)\r\n    },\r\n    loadByUrl (url) {\r\n      const id = getIdFromUrl(url)\r\n      const method = Number(this.playerVars.autoplay) === 1 ? 'loadVideoById' : 'cueVideoById'\r\n\r\n      id ? this.player[method](id) : this.player.loadVideoById(null)\r\n    },\r\n    loadById (id) {\r\n      const method = Number(this.playerVars.autoplay) === 1 ? 'loadVideoById' : 'cueVideoById'\r\n\r\n      id ? this.player[method](id) : this.player.loadVideoById(null)\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.player = null\r\n    this.shouldLoadByUrl = (typeof this.yturl === 'string' && this.yturl.length)\r\n  },\r\n\r\n  mounted () {\r\n    IframeAPIReady.then(() => {\r\n      Object.assign(STATES, swapObject(window.YT.PlayerState))\r\n\r\n      this.player = new window.YT.Player(this.$el, {\r\n        width: this.width,\r\n        height: this.height,\r\n        videoId: this.ytid,\r\n        playerVars: this.playerVars,\r\n        events: {\r\n          onReady: this.onReady,\r\n          onError: this.onError,\r\n          onApiChange: this.onApiChange,\r\n          onStateChange: this.onStateChange,\r\n          onPlaybackRateChange: this.onPlaybackRateChange,\r\n          onPlaybackQualityChange: this.onPlaybackQualityChange\r\n        }\r\n      })\r\n    })\r\n  },\r\n\r\n  destroyed () {\r\n    this.player.destroy()\r\n  },\r\n\r\n  render (h) {\r\n    return h('div')\r\n  }\r\n}\r\n","import { MIN_SIZES, SIZES } from './config'\r\nimport Player from './components/Player'\r\n\r\nconst plugin = {\r\n  install (Vue, {width, height, loadComponent = true} = {}) {\r\n    console.log('yes')\r\n    if (width && width > MIN_SIZES.WIDTH) {\r\n      SIZES.WIDTH = width\r\n    }\r\n\r\n    if (height && height > MIN_SIZES.HEIGHT) {\r\n      SIZES.HEIGHT = height\r\n    }\r\n\r\n    // load iframe api\r\n    const tag = document.createElement('script')\r\n    tag.src = 'https://www.youtube.com/iframe_api'\r\n\r\n    const first_script = document.getElementsByTagName('script')[0]\r\n    first_script.parentNode.insertBefore(tag, first_script)\r\n\r\n    // load component globally\r\n    loadComponent && Vue.component('VytiaPlayer', Player)\r\n  }\r\n}\r\n\r\ntypeof window.Vue === 'function' && window.Vue.use(plugin) \r\n\r\nexport default plugin\r\nexport {\r\n  Player\r\n}\r\n"]}