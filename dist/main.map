{"version":3,"sources":["config.js","utils.js","components\\Player.js","main.js"],"names":["SIZES","WIDTH","HEIGHT","MIN_SIZES","IframeAPIReady","Promise","resolve","reject","window","onYouTubeIframeAPIReady","getIdFromUrl","swapObject","id_regex","url","match","obj","new_obj","k","STATES","props","ytid","type","String","yturl","width","Number","default","height","playerVars","Object","watch","new_ytid","loadById","new_yturl","loadByUrl","methods","onReady","event","shouldLoadByUrl","$emit","onError","onApiChange","onStateChange","data","toLowerCase","onPlaybackRateChange","onPlaybackQualityChange","id","method","autoplay","player","created","length","mounted","then","assign","YT","PlayerState","Player","$refs","videoId","events","destroyed","destroy","render","h","ref","plugin","install","Vue","loadComponent","tag","document","createElement","src","first_script","getElementsByTagName","parentNode","insertBefore","component","use"],"mappings":";;;;;;AAAO,IAAMA,wBAAQ;AACnBC,SAAO,GADY;AAEnBC,QCCcQ,EDDN,aCCMA;ADHK,CAAd,OCcSC,aAAAA;AAdhB;ACAA,AFKO,ACJP,IDIaR,ACJPS,WAAW,qBDIQ,+FCJzB;ADKEX,SAAO,GADgB;AEJzB,AFMEC,ACJK,SAASQ,CDIN,WCJH,CAAsBG,GAAtB,EAA2B;AAChC,MAAMC,QAAQD,IAAIC,KAAJ,CAAUF,QAAV,CAAd;ACDF,AFOA,IEPMM,SAAS,EAAf;AFEyB,AGLzB,AFME,CDDK,CAMA,IAAMd,ACLP,CAACU,KAAD,IAAU,CAACA,MAAM,CAAN,CAAf,EAAyB,qBDKG,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7DC,ACLE,SDKKC,ECLE,KAAP,ECFW,cFOb,GAAiC;AENjCU,AFMiC,AGXnC,AFOG,SCFM,EFMgCb,SAAN;AEL/Bc,AFK+B,GAAjC,OELQ;AACJC,AFKL,ACHC,CDC4B,CAAvB,OCDEP,GCFGQ,GDEG,CAAN,CAAP;ACHQ,ADIT,KCLQ;AAILC,WAAO;AACLF,ADEN,YCFYC;AADD,ACPX,AFWO,IEXD6C,CDGG,IDQOxD,IEXD,MFWR,CAAoBI,GAApB,EAAwB;ACD3BS,ACTF4C,AFWA,MAAMpD,GEZO,EDUJ,KDEO,EAAhB,UEXSqD,GADI,EAC6C;ADUtDhD,ACVsD,YDUhD,CAACC,MAAD,EAASG,MAAT,CADD,uDCT6C,EAAI;ADWtDC,ACXsD,AFa1D,OAAI,CEbWF,GFaPP,CAAR,CCJS,ACTiD,GFa7CF,GAAb,EEbeS,AFaG,KEbwC,SDW5C;AACR,ACZoD,AFcxDR,QEdoBW,IFcZZ,EEdgD,CDY7C,CDECE,CAAJ,CAAR,IEdoBU,AFcFV,CAAlB,KEdwD,CDYvChB,KAAb;AACD,ACbqD,AFezD,kCEf6BqE,aAA4B;ADSjD,ACTiD,KDEnD,GCFuBA,aAA4B,sCAAZ,IAAY;ADexD3C,ADEF,SAAOX,GCFG,IDEV;ACDIK,ACfF,AFiBH,QEjBOG,IDeI,CAACF,ICfIE,EDeL,EAASC,ICfI,EDeb,CADA,eCduBxB,KAA/B,EAAsC;ADgBpCyB,ACfA,aDaM,OCbAz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","file":"main.map","sourcesContent":["export const SIZES = {\r\n  WIDTH: 640,\r\n  HEIGHT: 360\r\n}\r\n\r\nexport const MIN_SIZES = {\r\n  WIDTH: 200,\r\n  HEIGHT: 200\r\n}\r\n\r\n// export the ready state promise\r\nexport const IframeAPIReady = new Promise((resolve, reject) => {\r\n  window.onYouTubeIframeAPIReady = () => resolve()\r\n})\r\n","// export get id from url\r\nconst id_regex = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\r\n\r\nexport function getIdFromUrl(url) {\r\n  const match = url.match(id_regex)\r\n\r\n  if (!match || !match[1]) {\r\n    return false\r\n  }\r\n\r\n  return match[1]\r\n}\r\n\r\n// export reverse fonction\r\nexport function swapObject(obj){\r\n  const new_obj = {}\r\n\r\n  for(var k in obj) {\r\n    new_obj[obj[k]] = k;\r\n  }\r\n\r\n  return new_obj\r\n}\r\n","import { SIZES, IframeAPIReady } from '../config'\r\nimport { getIdFromUrl, swapObject } from '../utils'\r\n\r\nconst STATES = {}\r\n\r\nexport default {\r\n  props: {\r\n    ytid: {\r\n      type: String\r\n    },\r\n    yturl: {\r\n      type: String\r\n    },\r\n    width: {\r\n      type: [String, Number],\r\n      default() {\r\n        return SIZES.WIDTH\r\n      }\r\n    },\r\n    height: {\r\n      type: [String, Number],\r\n      default() {\r\n        return SIZES.HEIGHT\r\n      }\r\n    },\r\n    playerVars: {\r\n      type: Object,\r\n      default: {}\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    ytid (new_ytid) {\r\n      this.loadById(new_ytid)\r\n    },\r\n    yturl (new_yturl) {\r\n      this.loadByUrl(new_yturl)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    onReady (event) {\r\n      if (this.shouldLoadByUrl) {\r\n        this.loadByUrl(this.yturl)\r\n        this.shouldLoadByUrl = false\r\n      }\r\n\r\n      // console.log('ready', event)\r\n      this.$emit('ready', event)\r\n    },\r\n    onError (event) {\r\n      // console.log('error', event)\r\n      this.$emit('error', event)\r\n    },\r\n    onApiChange (event) {\r\n      // console.log('api-change', event)\r\n      this.$emit('api-change', event)\r\n    },\r\n    onStateChange (event) {\r\n      // console.log('state-change', event)\r\n      this.$emit('state-change', event)\r\n      this.$emit(STATES[event.data].toLowerCase(), event)\r\n    },\r\n    onPlaybackRateChange (event) {\r\n      // console.log('playback-rate-change', event)\r\n      this.$emit('playback-rate-change', event)\r\n    },\r\n    onPlaybackQualityChange (event) {\r\n      // console.log('playback-quality-change', event)\r\n      this.$emit('playback-quality-change', event)\r\n    },\r\n    loadByUrl (url) {\r\n      const id = getIdFromUrl(url)\r\n      const method = Number(this.playerVars.autoplay) === 1 ? 'loadVideoById' : 'cueVideoById'\r\n\r\n      id && this.player[method](id)\r\n    },\r\n    loadById (id) {\r\n      const method = Number(this.playerVars.autoplay) === 1 ? 'loadVideoById' : 'cueVideoById'\r\n\r\n      this.player[method](id)\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.player = null\r\n    this.shouldLoadByUrl = (typeof this.yturl === 'string' && this.yturl.length)\r\n  },\r\n\r\n  mounted () {\r\n    IframeAPIReady.then(() => {\r\n      Object.assign(STATES, swapObject(window.YT.PlayerState))\r\n\r\n      this.player = new window.YT.Player(this.$refs.player, {\r\n        width: this.width,\r\n        height: this.height,\r\n        videoId: this.ytid,\r\n        playerVars: this.playerVars,\r\n        events: {\r\n          onReady: this.onReady,\r\n          onError: this.onError,\r\n          onApiChange: this.onApiChange,\r\n          onStateChange: this.onStateChange,\r\n          onPlaybackRateChange: this.onPlaybackRateChange,\r\n          onPlaybackQualityChange: this.onPlaybackQualityChange\r\n        }\r\n      })\r\n    })\r\n  },\r\n\r\n  destroyed () {\r\n    this.player.destroy()\r\n  },\r\n\r\n  render (h) {\r\n    return h('div', {ref: 'player'})\r\n  }\r\n}\r\n","import { MIN_SIZES, SIZES } from './config'\r\nimport _Player from './components/Player'\r\n\r\nconst plugin = {\r\n  install (Vue, {width, height, loadComponent = true} = {}) {\r\n    if (width && width > MIN_SIZES.WIDTH) {\r\n      SIZES.WIDTH = width\r\n    }\r\n\r\n    if (height && height > MIN_SIZES.HEIGHT) {\r\n      SIZES.HEIGHT = height\r\n    }\r\n\r\n    // load iframe api\r\n    const tag = document.createElement('script')\r\n    tag.src = 'https://www.youtube.com/iframe_api'\r\n\r\n    const first_script = document.getElementsByTagName('script')[0]\r\n    first_script.parentNode.insertBefore(tag, first_script)\r\n\r\n    // load component globally\r\n    loadComponent && Vue.component('VytiaPlayer', _Player)\r\n  }\r\n}\r\n\r\ntypeof window.Vue === 'object' && window.Vue.use(plugin) \r\n\r\nexport default plugin\r\nexport const Player = _Player\r\n"]}